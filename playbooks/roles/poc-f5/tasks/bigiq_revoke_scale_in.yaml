---
- name: GET Token
  uri:
    url: https://{{ extra_bigiq_ip_mgt }}:{{ extra_bigiq_port_mgt }}/mgmt/shared/authn/login
    method: POST
    headers:
      Content-Type: application/json
    body: "{{ lookup('template','bigiq_auth.jinja2') }}"
    body_format: json
    timeout: 60
    status_code: 200, 202
    validate_certs: false
  register: result_auth

#-------------------------- GET RegKey Pool --------------------------
- name: GET RegKey Pool
  uri:
    url: https://{{ extra_bigiq_ip_mgt }}:{{ extra_bigiq_port_mgt }}/mgmt/shared/pipeline/manager/cm-device-licensing-pool-purchased-pool-licenses
    method: POST
    headers:
      Content-Type: "application/json; charset=UTF-8"
      X-F5-Auth-Token: "{{result_auth.json.token.token}}"
    body: "{{ lookup('template','bigiq_get_licence_payload.json') }}"
    body_format: json
    timeout: 60
    status_code: 200
    validate_certs: false
  register: result_regkey_pool

- name: SET var_license_pool
  set_fact:
    var_license_pool: "{{ extra_project_name }}-{{ extra_vmss_name }}"

- name: SET var_reg_key_pool
  set_fact:
    var_reg_key_pool: "{
    'id': '{{ item.id }}',
    'name': '{{ item.name }}'
    }"
  loop: "{{ result_regkey_pool.json['items'] }}"
  when: item.name == var_license_pool

- debug:
    var: var_reg_key_pool


#-------------------------- GET Registration Keys --------------------------
- name: GET RegKey Pool
  uri:
    url: https://{{ extra_bigiq_ip_mgt }}:{{ extra_bigiq_port_mgt }}/mgmt/cm/device/licensing/pool/regkey/licenses/{{var_reg_key_pool.id}}/offerings
    method: GET
    headers:
      Content-Type: "application/json; charset=UTF-8"
      X-F5-Auth-Token: "{{result_auth.json.token.token}}"
    body: "{{ lookup('template','bigiq_get_licence_payload.json') }}"
    body_format: json
    timeout: 60
    status_code: 200
    validate_certs: false
  register: result_regkeys

- name: INIT list_regkey
  set_fact:
    list_regkey: []

- name: SET list_regkey
  set_fact:
    list_regkey: "{{ list_regkey + [item.regKey] }}"
  loop: "{{ result_regkeys.json['items'] }}"

- debug:
    var: list_regkey

#-------------------------- Revoke Registration Key of slave to remove --------------------------
- name: INIT list_regkey_devices
  set_fact:
    list_regkey_devices: "{{ lookup('template', 'set_regkey_devices.json') }}"

- debug:
    var: list_regkey_devices

- name: Revoke licence for absent Slaves
  delegate_to: localhost
  bigiq_regkey_license_assignment:
    pool: "{{ extra_project_name }}-{{ extra_vmss_name }}"
    device: "{{ item.management }}"
    managed: no
    device_username: "{{ extra_admin_user }}"
    device_password: "{{ extra_admin_password }}"
    device_port: "{{ extra_port_mgt }}"
    key: "{{ item.regkey }}"
    state: absent
    provider:
      user: "{{ extra_bigiq_admin_user }}"
      password: "{{ extra_bigiq_admin_password }}"
      server: "{{ extra_bigiq_ip_mgt }}"
      server_port: "{{ extra_bigiq_port_mgt }}"
      validate_certs: no
  loop: "{{ list_regkey_devices }}"









...