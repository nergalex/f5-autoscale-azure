---
- name: Create Public IP Address for Management NIC
  delegate_to: localhost
  azure_rm_publicipaddress:
    resource_group: "rg-{{ extra_platform_name }}"
    allocation_method: Static
    domain_name: "{{ extra_vm_name }}-mgt-{{ extra_platform_name }}"
    name: "mgt-{{ extra_platform_name }}-{{ extra_vm_name }}"
    location: "{{ extra_location }}"
    sku: 'Basic'
    idle_timeout: 30
    version: 'ipv4'
    tags:
      Name: "mgt-{{ extra_platform_tags }}-{{ extra_vm_name }}"
      owner: "{{ owner }}"
  register: output_ip_address

- name: Create Virtual Network Inteface Card - Management
  delegate_to: localhost
  azure_rm_networkinterface:
    resource_group: "rg-{{ extra_platform_name }}"
    name: "nic-{{ extra_platform_name }}-{{ extra_vm_name }}-management"
    location: "{{ extra_location }}"
    virtual_network: "vnet-{{ extra_platform_name }}"
    subnet_name: "net-{{ extra_platform_name }}-management"
    create_with_security_group: false
    tags: "{{ extra_platform_tags }}
    Name=nic-{{ extra_platform_name }}-{{ extra_vm_name }}-management
    owner={{ owner }}"
    ip_configurations:
      - name: mgt
        private_ip_address: "{{ extra_ip_mgt }}"
        private_ip_allocation_method: 'Static'
        primary: true
        public_ip_address_name: "mgt-{{ extra_platform_name }}-{{ extra_vm_name }}"

- name: Create Virtual Network Inteface Card - App
  delegate_to: localhost
  azure_rm_networkinterface:
    resource_group: "rg-{{ extra_platform_name }}"
    name: "nic-{{ extra_platform_name }}-{{ extra_vm_name }}-app"
    location: "{{ extra_location }}"
    virtual_network: "vnet-{{ extra_platform_name }}"
    subnet_name: "net-{{ extra_platform_name }}-{{ extra_zone_name }}"
    create_with_security_group: false
    tags: "{{ extra_platform_tags }}
    Name=nic-{{ extra_platform_name }}-{{ extra_vm_name }}-app
    owner={{ owner }}
    zone={{ extra_zone_name }}"
    ip_configurations:
      - name: app
        private_ip_address: "{{ extra_ip_app }}"
        private_ip_allocation_method: 'Static'
        primary: true

- name: Create VM
  delegate_to: localhost
  azure_rm_virtualmachine:
    resource_group: "rg-{{ extra_platform_name }}"
    name: "{{ extra_vm_name }}"
    location: "{{ extra_location }}"
    short_hostname: "{{ extra_vm_name }}"
    vm_size: "{{ app_vm_size }}"
    tags: "{{ extra_platform_tags }}
              Name={{ extra_vm_name }}
              owner={{ owner }}
              zone={{ extra_zone_name }}"
    admin_username: "{{ app_admin_username }}"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: "/home/{{ app_admin_username }}/.ssh/authorized_keys"
        key_data: "{{ key_data }}"
    image:
      offer: CentOS
      publisher: OpenLogic
      sku: '7.5'
      version: latest
    managed_disk_type: Standard_LRS
    os_type: Linux
    network_interface_names:
      - "nic-{{ extra_platform_name }}-{{ extra_vm_name }}-management"
      - "nic-{{ extra_platform_name }}-{{ extra_vm_name }}-app"

- name: Track installation of VM extension
  debug:
    msg: "Track installation of VM extension
    vm={{ extra_vm_name }};
    ip={{ output_ip_address.state.ip_address }};
    log_file=/var/lib/waagent/custom-script/download/0/stdout"

- name: Create VM Extension
  azure_rm_virtualmachine_extension:
    name: "extension-{{ extra_vm_name }}"
    location: "{{ extra_location }}"
    resource_group: "rg-{{ extra_platform_name }}"
    virtual_machine_name: "{{ extra_vm_name }}"
    publisher: 'Microsoft.Azure.Extensions'
    virtual_machine_extension_type: 'CustomScript'
    type_handler_version: 2.0
    protected_settings: '{"commandToExecute": "{{ lookup("template", "hackazon_2nic_bootstrapping.jinja2") }}"}'
    settings: '{{ extra_extension_file_uri_list }}'
    auto_upgrade_minor_version: true
  when: extra_extension_file_uri_list is defined

- name: Create VM Extension - cmd only
  azure_rm_virtualmachine_extension:
    name: "extension-{{ extra_vm_name }}"
    location: "{{ extra_location }}"
    resource_group: "rg-{{ extra_platform_name }}"
    virtual_machine_name: "{{ extra_vm_name }}"
    publisher: 'Microsoft.Azure.Extensions'
    virtual_machine_extension_type: 'CustomScript'
    type_handler_version: 2.0
    protected_settings: '{"commandToExecute": "{{ lookup("template", "hackazon_2nic_bootstrapping.jinja2") }}"}'
    auto_upgrade_minor_version: true
  when: extra_extension_file_uri_list is undefined


